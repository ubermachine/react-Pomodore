{"version":3,"sources":["components/pomodoro.js","App.js","serviceWorker.js","index.js"],"names":["Pomodoro","props","timer","mybeep","sessionend","allend","breaknotleft","handleClick","bind","handleTimer","countDown","state","display","session","break","running","bruninng","sec","padStart","min","label","event","target","id","this","setState","$","trigger","document","getElementById","currentTime","clearInterval","test","prevState","String","Math","floor","sessionstarted","setInterval","className","src","preload","class","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03c7e2f3.chunk.js","sourcesContent":["import React  from 'react'\nimport $ from 'jquery'\n\nclass Pomodoro extends React.Component{\n    constructor(props){\n        super(props);\n        this.timer = 0;\n        this.mybeep=0;\n        this.sessionend=0;\n        this.allend=0;\n        this.breaknotleft=0;\n        this.handleClick=this.handleClick.bind(this)\n        this.handleTimer=this.handleTimer.bind(this)\n        this.countDown=this.countDown.bind(this)\n        this.state={\n            display:1500,\n            session:25,\n            break:5,\n            running:false,\n            bruninng:0,\n            sec:\"0\".padStart(2, '0'),\n            min:25,\n            mybeep:0,\n            label:\"Play\"\n            \n\n\n        }\n    }\n\n\n    handleClick(event){\n        const incdec=/increment|decrement/\n        if(event.target.id===\"reset\"){\n        this.setState({\n                    display:1500,\n                    session:25,\n                    min:25,\n                    sec:\"0\".padStart(2, '0'),\n                    label:'Play',\n \n                    break:5,\n                    running:false,\n                    bruninng:0,\n                })\n                $(\"#beep\").trigger(\"pause\")\n                var aud = document.getElementById('beep');\n                aud.currentTime=0\n                \n                clearInterval(this.timer)\n                 this.timer=false\n\n                 this.timer = 0;\n                 this.mybeep=0;\n                 this.sessionend=0;\n                 this.allend=0;\n                 this.breaknotleft=0;\n        }\n\n        if(incdec.test(event.target.id)&&!this.state.running){\n            this.timer=1;\n        switch(event.target.id){\n            case \"break-increment\":\n                this.setState({\n                    break:(this.state.break<=59?(this.state.break + 1):this.state.break)\n                })\n            break;\n                case \"break-decrement\":\n                    this.setState({\n                        break:(this.state.break>=2?(this.state.break - 1):this.state.break)\n                    })\n                break;\n                case \"session-increment\":\n                    this.setState({\n                        session:this.state.session<=59?(this.state.session + 1):this.state.session,\n                        display:this.state.session<=59?(this.state.session*60 + 60):this.state.session*60,\n                        \n                    })\n                break;\n                case \"session-decrement\":\n                    this.setState({\n                        session:this.state.session >=2?(this.state.session - 1):this.state.session,\n                        display:this.state.session>=2?(this.state.session*60 - 60):this.state.session*60, \n                       \n\n                    })\n                break;\n            default:\n                this.setState({\n                    session:this.state.session,\n                    break:this.state.break,\n                    min:this.state.session,\n\n                })\n        }\n    }\n     }\n    componentDidUpdate(prevState){\n            if(prevState.display !== this.state.display && this.timer==1){\n                this.timer=0;\n        this.setState({\n            min:String(Math.floor(this.state.display/60)).padStart(2, '0'),\n            sec:\"0\".padStart(2, '0')\n        })\n    }}\n    \n    handleTimer(state){\n        this.setState(state=>({\n            running:!state.running,\n            label:\"session on\"\n            \n        }))\n        if(this.state.running){\n            this.sessionstarted=1;\n        }\n\n        this.state.running&&this.sessionstarted==1?clearInterval(this.timer):this.timer=setInterval(this.countDown,1000)\n        \n        \n\n    }\n    countDown(){\n        \n        this.setState(state=>({\n            display:state.display>=1?state.display-1:state.display,\n\n\n        }))\n\n        this.setState(state=>({\n            min:String(Math.floor(this.state.display/60)).padStart(2, '0'),\n            sec:String(Math.floor(this.state.display%60)).padStart(2, '0'),\n            \n        }))\n\n  \n         if ((this.state.display==0 &&this.breaknotleft==0) &&(this.allend==0 && this.state.mybeep==1)){\n            this.sessionend=1;\n            this.breaknotleft=1;\n            this.allend=1;\n           \n            this.setState(state=>({\n                display:this.state.break*60,\n                min:String(Math.floor(this.state.break)).padStart(2, '0'),\n                bruninng:1,\n                label:\"break on\",\n                mybeep:0\n            }))\n\n\n        }\n        else if ((this.state.display==0 && this.breaknotleft==1) && (this.allend==1 && this.state.mybeep==1)){\n           \n\n            this.setState(state=>({\n                display:this.state.session*60,\n                min:String(Math.floor(this.state.session)).padStart(2, '0'),\n                bruninng:0,\n                mybeep:0,\n                label:\"session on\"\n            }))\n            \n            this.breaknotleft=0;\n            this.sessionend=0\n            this.allend=0;\n\n        }\n        else if (this.state.display==0 && this.state.mybeep==0 ){\n            \n            $(\"#beep\").trigger(\"play\")\n            \n                    this.setState(state=>({\n                        mybeep:1\n                    }))\n\n                \n        }\n\n\n\n    }\n\n    \n\n    render(){\n        return (\n            \n            <div id=\"clock\">\n                <div className=\"title\">Pomodore a day keeps laziness away\n                </div>\n                <div id=\"container\">\n                <audio  id='beep'  src=\"https://www.soundjay.com/misc/sounds/bell-ringing-05.mp3\" preload=\"auto\" ></audio>\n                <div className='labelbois'>\n                <div  id='break-label'>Break<br/>\n                <button class=\"btn btn-primary\"  onClick={this.handleClick} id='break-increment'>up</button>\n                <div id='break-length'>{this.state.break}</div>\n                <button class=\"btn btn-primary\" onClick={this.handleClick}  id=\"break-decrement\">down</button>\n               \n                </div>\n                <div id=\"session-label\">Session<br/>\n           \n                <button class=\"btn  btn-primary\" onClick={this.handleClick}  id='session-increment'>up</button>\n                <div id='session-length'>{this.state.session}</div>\n                <button class=\"btn btn-primary\" onClick={this.handleClick}  id='session-decrement'>down</button>\n                </div></div>\n               <div className='timebois'>\n                <div id='timer-label'>{this.state.label}</div>\n               <div id='time-left'>{this.state.min}:{this.state.sec}</div></div>\n                <button class=\"btn  btn-primary\" onClick={this.handleTimer}   id='start_stop'>Play</button>\n                <button class=\"btn  btn-primary\"  onClick={this.handleClick} id='reset'>R</button>\n\n            </div>\n            </div>\n\n        )\n    }\n\n}\n\nexport default Pomodoro;\n\n","import React from 'react';\n//import ReactDOM from 'react-dom'\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import $ from \"jQuery\";\nimport Pomodoro from './components/pomodoro';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Pomodoro/>\n      </header>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}